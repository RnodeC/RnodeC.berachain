---
- become: true
  block:
  - name: Check if config.toml exists
    stat:
      path: "{{ berachain_home_dir }}/config/config.toml"
    register: config_toml_stat

  - name: Check if app.toml exists
    stat:
      path: "{{ berachain_home_dir }}/config/app.toml"
    register: app_toml_stat

  - name: Set fact for initialization requirement
    set_fact:
      require_init: "{{ not (config_toml_stat.stat.exists and app_toml_stat.stat.exists) }}"

  - name: Create home directory
    file:
      path: "{{ berachain_home_dir }}"
      state: directory
      mode: 0750
      owner: "{{ berachain_user_name }}"
      group: "{{ berachain_group_name }}"

  - name: If fresh node... Recover from mnemonic if provided
    ansible.builtin.expect:
      command: >
        {{ berachain_bin_dir }}/berad init -o {{ berachain_moniker }}
        --chain-id {{ berachain_chain_id }}
        --home {{ berachain_home_dir }}
        --recover
      responses:
        (?i)Enter your bip39 mnemonic: "{{ berachain_keys_mnemonic }}"
      echo: yes
    register: berad_init_output
    when:
    - berachain_keys_mnemonic is defined
    - berachain_keys_mnemonic | length > 0
    - require_init
  - debug:
      var: berad_init_output

  - name: Otherwise, init regularly
    command: >
        {{ berachain_bin_dir }}/berad init -o {{ berachain_moniker }}
        --chain-id {{ berachain_chain_id }}
        --home {{ berachain_home_dir }}
    register: berad_init_output
    when:
    - berachain_keys_mnemonic is not defined or berachain_keys_mnemonic | length == 0
    - require_init
  - debug:
      var: berad_init_output

  - name: Stage config.toml
    template:
      src: config.toml.j2
      dest: "{{ berachain_home_dir }}/config/config.toml"
      mode: 0644
      owner: "{{ berachain_user_name }}"
      group: "{{ berachain_group_name }}"

  - name: Stage app.toml
    template:
      src: app.toml.j2
      dest: "{{ berachain_home_dir }}/config/app.toml"
      mode: 0644
      owner: "{{ berachain_user_name }}"
      group: "{{ berachain_group_name }}"

  - name: Stage client.toml
    template:
      src: client.toml.j2
      dest: "{{ berachain_home_dir }}/config/client.toml"
      mode: 0644
      owner: "{{ berachain_user_name }}"
      group: "{{ berachain_group_name }}"

  #- name: Get genesis.json
  #  get_url:
  #    url: "{{ berachain_genesis_url }}"
  #    dest: "{{ berachain_home_dir }}/config/genesis.json"
  #    mode: 0644
  #    owner: "{{ berachain_user_name }}"
  #    group: "{{ berachain_group_name }}"

  - name: (temp) Copy genesis.json
    copy:
      src: "files/genesis.json"
      dest: "{{ berachain_home_dir }}/config/genesis.json"
      mode: 0644
      owner: "{{ berachain_user_name }}"
      group: "{{ berachain_group_name }}"

  - name: Install berad service file
    template:
      src: berad.service.j2
      dest: "{{ berachain_systemd_dir }}/berad.service"
      owner: root
      group: root
      mode: 0755

  - name: Check if a local node_key.json file was provided
    stat:
      path: "{{ berachain_node_key_file }}"
    register: local_node_key_file_stat
    delegate_to: localhost
    when: berachain_node_key_file is defined

  - name: Copy provided node_key.json to remote
    copy:
      src: "{{ berachain_node_key_file }}"
      dest: "{{ berachain_home_dir }}/config/node_key.json"
      mode: 0600
      owner: "{{ berachain_user_name }}"
      group: "{{ berachain_group_name }}"
      decrypt: "{{ 'yes' if local_node_key_file_stat.stat.isencrypted else 'no' }}"
    when:
    - berachain_node_key_file is defined
    - local_node_key_file_stat.stat.exists

- name: If validator, configure priv_validator_key.json
  when: berachain_role == 'validator'
  become: true
  block:
  - name: Check if a local priv_validator_key.json file was provided
    stat:
      path: "{{ berachain_priv_validator_key_file }}"
    register: local_priv_validator_key_file_stat
    delegate_to: localhost
    when: berachain_priv_validator_key_file is defined

  - name: Copy provided priv_validator_key.json to remote
    copy:
      src: "{{ berachain_priv_validator_key_file }}"
      dest: "{{ berachain_home_dir }}/config/priv_validator_key.json"
      mode: 0600
      owner: "{{ berachain_user_name }}"
      group: "{{ berachain_group_name }}"
      decrypt: "{{ 'yes' if local_priv_validator_key_file_stat.stat.isencrypted else 'no' }}"
    when:
    - berachain_priv_validator_key_file is defined
    - local_priv_validator_key_file_stat.stat.exists
